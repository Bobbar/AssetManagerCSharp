<!-- 

This document contains examples and documentation for creating and maintaining XML deployment markup scripts.


Deployment: 
	The root element for all deployment scripts.
	
	Attributes:
	
		Name: ** Required **
			Specifies the name of the deployment as it will appear during selection.
		
		OrderPriority: ** Optional. Default = 0 **
			Specifies the deployment priority. A higher value means the deployment will be displayed/performed later in the process.

Description:
  Specifies a detailed description to be displayed in the selection UI.

Command:
	Specifies a deployment command to be performed. Commands are performed in order from top to bottom, and can be nested within any result block.
	
	All command except for Prompt and Sleep provide a result block (OnSuccess, OnFailure, OnComplete, ExitCode, etc). The result blocks will execute any contained commands. Commands can be nested to any depth.
	
	Attributes:
	
		Type: ** Required **
			Specifies the type of command to perform.
			
			Available Types:
			
				SimplePsExec:
					Specifies a command to be executed using the PSExec service. An exit code of 0 is considered successful. Use AdvancedPsExec if more control over exit codes is required.
					
					Format:
					
						<Command Type="SimplePsExec" Title="Install Something">
							
							<String> **Required **
								
								Command string to be executed on target device. 
								
								Ex: msiexec.exe /x app_install.msi /QN
								
							</String>
							
							<OnSuccess> ** Optional **
								<Command>
									Execute this command after success.
								</Command>
							</OnSuccess>
							
							<OnFailure> ** Optional **
								<Command>
									Execute this command after failure.
								</Command>
							</OnFailure>
						
						</Command>

					
					Result Handling:
					
						<OnSuccess>
							Specifies additional Commands to perform if an exit code of 0 was returned.
							
						<OnFailure Continue="True">
							Specifies additional Commands to perform if the exit code was NOT 0.
							
							Attributes:
								
								Continue (True/False): ** Optional. Default = False **
									Indicates that the deployment will continue after this failure.
																									
				
				AdvancedPsExec:
					Specifies a command to be executed using the PSExec service. The exit code is returned and processed according to an <ExitCodeResponse> element.
					
					Format:
					
						<Command Type="AdvancedPsExec" Title="Install Something">
							
							<String> ** Required **
								Command string to be executed on target device. 
								
								Ex: msiexec.exe /x app_install.msi /QN
								
							</String>
							
							<ExitCodeResponse> ** Optional **
							
								<ExitCode Value="0,1,2" IsSuccess="True">
									<Command> 
										Specify additional commands to execute for this result.
									</Command>
								</ExitCode>
								
								<ExitCode Value="">
									<Command> 
										Specify additional commands to execute for this result.
									</Command>
								</ExitCode>
								
							</ExitCodeResponse>
						
						</Command>
					
					
					
					Result Handling:
						The exit code from the command is processed according to the following examples.
					
						<ExitCodeResponse> 
							Exit code response element. This contains the <ExitCode> elements specifying the expected results.
							
							<ExitCode Value="0,1,2" IsSuccess="True">
								
								Exit codes 0, 1 and 2 will be considered successful results, and Commands within will be executed.
								
								<Command> 
									Specify additional commands to execute for this result.
								</Command>
							</ExitCode>
							
							<ExitCode Value="3,4" IsSuccess="False">
								
								Exit codes 3 and 4 will be considered failures, and Commands within will be executed.
								
								<Command> 
									Specify additional commands to execute for this result.
								</Command>
							</ExitCode>
							
							<ExitCode Value="">   
							
								Specify an empty Value and no IsSuccess attributes to handle all other exit codes not previously specified in other <ExitCode> elements.
								
								<Command> 
									Specify additional commands to execute for this result.
								</Command>
							</ExitCode>
							
						</ExitCodeResponse>
						
				SimplePowerShell:
					Specifies a PowerShell script string to be executed using the PowerShell service. No results are returned. Only an <OnComplete> result is provided.
					
					Format:
					
						<Command Type="SimplePowerShell" Title="Install Something">
							
							<String> ** Required **
								PowerShell script string to be executed on target device. 
							</String>
							
							<OnComplete> ** Optional **
								<Command>
									Specify additional commands to execute on completion.
								</Command>
							</OnComplete>
						
						</Command>
						
							
				SimplePowerShellCommand:
					Specifies PowerShell command or commands to execute using the PowerShell service. Returns <OnSuccess> or <OnFailure>. A success is determined by the contents of the result string.
					If the result string contains the text 'success' or 'true' or is empty, a successful result is assumed.
					
					Format:
					
						<Command Type="SimplePowerShellCommand">
							
							<PSCommands> ** Required **
								
								***
								The PSCommand and PSParameter mirror the functionality of .NETs System.Management.Automation.Runspaces.  See: https://docs.microsoft.com/en-us/dotnet/api/system.management.automation.runspaces.command?view=powershellsdk-1.1.0
								***
								
								<PSCommand IsScript="True" UseLocalScope="False">
									Set-Location "HKLM:"
									Test-Path "\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Uninstall\TeamViewer"
								</PSCommand>
								
								<PSCommand IsScript="False" UseLocalScope="True" Value="Remove-Item">
									<PSParameter Name="Recurse"/>
									<PSParameter Name="Force"/>
									<PSParameter Name="Path" Value="C:\Temp\TVDeploy"/>
								</PSCommand>
			
							</PSCommands>
		
							<OnSuccess>
								<Command>
									Specify additional commands to execute on completion.
								</Command>
							</OnSuccess>
				
							<OnFailure Continue="True">
								<Command>
									Specify additional commands to execute on completion.
								</Command>
							</OnFailure>
		
						</Command>
						
					Result Handling:
					
						<OnSuccess>
							Specifies additional Commands to perform if the command result string is blank or contains 'success' or 'true'.
							
						<OnFailure Continue="True">
							Specifies additional Commands to perform if the result does not meet the success requirements.
							
							Attributes:
								
								Continue (True/False): ** Optional. Default = False **
									Indicates that the deployment will continue after this failure.
					
					
				Sleep:
					Specifies a sleep command. The deployment will pause for the specified number of seconds.
					
					Format:
						<Command Type="Sleep" Value="10"/>
						
							Attributes:
							
								Value:  The number of seconds to wait before continuing.
								
				Prompt:
					Specifies a user prompt command. Provides a dialog or a log window message to be displayed to the user.
					
					Format:
						<Command Type="Prompt">
							
							<LogMessage Type="Notice" Value="Deleting temp files..."/>
							
								Specifies a message to be displayed to the deployment log window.
														
								LogMessage Attributes:
								
										Type: Specifies the styling of the log message.
											Values:
												Success: Green text.
												Error: Red text.
												Warning: Yellow text.
												Notice: Blue text.
												Default: *If no Type attribute is specified*  Black text.
												
							
							
							<DialogPrompt Value="Error occurred while executing command!" Title="Error"/>
							
								Specifies a message to be displayed in a 'popup' dialog window.
								
								DialogPrompt Attributes:
								
										Value: The message text to be displayed.
										
										Title: Title of the dialog window.
						
						</Command>
	

Notes:

	Commands can be nested or stacked as needed. So you can specify any type of additional commands within an OnSuccess, OnFailure, OnComplete or ExitCode block. See examples.
	
	
 -->
 
 <!-- EXAMPLES -->
 
<Deployment Name="Testing" OrderPriority="99">
  <Description>
    This is an example deployment.
  </Description>
  
	<Command Type="Prompt">
		<LogMessage Type="Notice">
		IPCONFIG....
		</LogMessage>
		<LogMessage Type="Notice">
		Starting Ipconfig!?
		</LogMessage>
	</Command>
	
	<Command Type="AdvancedPsExec" Title="Testing...">
		<String>
		ipconfig
		</String>
		
		<ExitCodeResponse>
			<ExitCode Value="0,1" IsSuccess="True">
				<Command Type="Prompt">
					<LogMessage Type="Success">
					Successful!
					</LogMessage>
				</Command>
			</ExitCode>				
		</ExitCodeResponse>
	</Command>
	
	<Command Type="SimplePSExec" Title="Ping test">
		<String>
		ping google.com
		</String>
		<OnSuccess>
			<Command Type="Prompt">
				<LogMessage Type="Success">
				It worked!
				</LogMessage>
			</Command>
			<Command Type="Prompt">
				<LogMessage Type="Success">
				Test message 1
				</LogMessage>
			</Command>
			<Command Type="Prompt">
				<LogMessage Type="Notice">
				Test message 2 in blue!
				</LogMessage>
			</Command>
		</OnSuccess>
		<OnFailure>
			<Command Type="Prompt">
				<LogMessage Type="Error">
				It Failed!
				</LogMessage>
			</Command>
		</OnFailure>
	</Command>
	
	<Command Type="AdvancedPsExec" Title="Testing">
		<String>
		dir blah
		</String>
		
		<ExitCodeResponse>
			<ExitCode Value="3010" IsSuccess="True">
				<Command Type="Prompt">
					<LogMessage Type="Notice">
					Successful. **HOWEVER**
					</LogMessage>
				</Command>
			</ExitCode>	
			
			<ExitCode Value="0" IsSuccess="True">
				<Command Type="Prompt">
					<LogMessage Type="Success">
					Successful!
					</LogMessage>
				</Command>
			</ExitCode>	
			
			<ExitCode Value="1" IsSuccess="False">
				<Command Type="Prompt">
					<LogMessage Type="Error">
					FAILED!
					</LogMessage>
				</Command>
				
				<Command Type="SimplePSExec" Title="Certificate Install">
					<String>
					ping google.com
					</String>
					
					<OnSuccess>
						<Command Type="Prompt">
							<LogMessage Type="Success">
							It worked!
							</LogMessage>
						</Command>
					</OnSuccess>
					
					<OnFailure>
					
						<Command Type="Prompt">
							<LogMessage Type="Error">
							It Failed!
							</LogMessage>
						</Command>
						
						<!-- Nested additional command -->
						
						<Command Type="SimplePSExec" Title="Certificate Install">
							<String>
							ping microsoft.com
							</String>
							<OnSuccess>
								<Command Type="Prompt">
									<LogMessage Type="Success">
									It worked!
									</LogMessage>
								</Command>
							</OnSuccess>
							<OnFailure>
								<Command Type="Prompt">
									<LogMessage Type="Error">
									It Failed!
									</LogMessage>
								</Command>
							</OnFailure>
						</Command>
						
					</OnFailure>
					
				</Command>
			</ExitCode>	
			
		</ExitCodeResponse>
	</Command>
	
	
	
</Deployment>

<!-- Bobby Lovell - FCBDD - 2018 -->